@attribute [Authorize(Roles = "Admin")]
@page "/admin"
@page "/admin/{Page}"
@page "/admin/{Page}/{Category}/{ProductId}"
@inject IOrderService OrderService
@inject IToastService ToastService
@inject IUserService UserService
@inject IUserDetailsService UserDetails
@inject IProductsService ProductsService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider StateProvider

<PageTitle>Admin Panel</PageTitle>

<div class="row">
    <div class="col-lg-3">
        <div class="m-4 mt-1 p-3">
            <nav class="navbar flex-lg-column navbar-light shadow" id="account-menu">
                @foreach (var item in navigationItems.Items)
                {
                    <a class="nav-link cursorHand " @onclick="() => ChangeViewAsync(item.Path)">@item.Name</a>
                }
            </nav>
        </div>
    </div>
    <div class="col-lg-9 container px-1 px-md-5">
        @switch (Page)
        {
            case "user-list":
                <h2>Lista użytkowników</h2>
                <div class="row p-3 pb-1 mb-0 text-center">
                    <div class="col-4">
                        <span>Email</span>
                    </div>
                    <div class="col-4">
                        <span>Data utworzenia</span>
                    </div>
                    <div class="col-2">
                        <span>Liczba zamówień</span>
                    </div>
                    <div class="col-2">
                        <span>Liczba zrealizowanych zamówień</span>
                    </div>
                </div>
                @foreach (var user in users)
                {
                    <div class="row p-3 mb-2 rounded border border-1 shadow text-center">
                        <div class="col-4">
                            <span>@user.Email</span>
                        </div>
                        <div class="col-4">
                            <span>@user.CreationDate</span>
                        </div>
                        <div class="col-2">
                            <span>@user.Orders.Count</span>
                        </div>
                        <div class="col-2">
                            @user.Orders.Where(o => o.State == OrderStates.Delivered).Count()
                        </div>
                    </div>
                }
                break;
            case "order-list":
                <h2>Lista użytkowników</h2>
                <div class="row p-3 pb-1 mb-0 text-center">
                    <div class="col-2">
                        <span>Email</span>
                    </div>
                    <div class="col-4">
                        <span>Adres</span>
                    </div>
                    <div class="col-2">
                        <span>Status</span>
                    </div>
                    <div class="col-2">
                        <span>Telefon</span>
                    </div>
                    <div class="col-2">
                        <span>Data</span>
                    </div>
                </div>
                @foreach (var order in orders)
                {
                    <div class="row p-3 mb-2 rounded border border-1 shadow text-center">
                        <div class="col-2">
                            <span>@order.DeliveryDetails.Email</span>
                        </div>
                        <div class="col-4">
                            <span>@order.DeliveryDetails.PostCode @order.DeliveryDetails.City @order.DeliveryDetails.Street @order.DeliveryDetails.HouseNumber</span>
                        </div>
                        <div class="col-2">
                            <span>@order.State</span>
                        </div>
                        <div class="col-2">
                            @order.DeliveryDetails.PhoneNumber
                        </div>
                        <div class="col-2">
                            @order.OrderDate
                        </div>
                    </div>
                }
                break;
            case "product-list":
                <h2>Lista produktów</h2>
                <div class="row p-3 pb-1 mb-0 text-center">
                    <div class="col-3">
                        <span>Producent</span>
                    </div>
                    <div class="col-4">
                        <span>Nazwa</span>
                    </div>
                    <div class="col-3">
                        <span>Id</span>
                    </div>
                    <div class="col-2">
                    </div>
                </div>
                @foreach (var product in products)
                {
                    <div class="row p-3 mb-2 rounded border border-1 shadow text-center">
                        <div class="col-3">
                            <span>@product.Manufacturer</span>
                        </div>
                        <div class="col-4">
                            <span>@product.Name</span>
                        </div>
                        <div class="col-3">
                            <span>@product.Id</span>
                        </div>
                        <div class="col-2">
                            <button class="btn btn-primary text-center" @onclick="()=>EditProduct(product.Id, product.Category)">Edytuj</button>
                        </div>
                    </div>
                }
                break;
            case "edit-product":
                <CascadingValue Value="editedProduct">
                    <ProductForm OnSubmited="SaveEditedProduct" />
                </CascadingValue>
                break;
            default:
                <div class="d-flex w-100 justify-content-center">
                    <h3>Wybierz kategorię produktu</h3>
                     <DropdownMenu ChangeTitleToSelectedValue="true"
                          OnMouseOverEnabled="false"
                          Items="ProductHelper.GetCategories()"
                          TItem="string"
                          OnSelected="CategorySelected"
                          ButtonClassCss="form-control shadow-none btn border border-1">
                     </DropdownMenu>
                </div>
                <CascadingValue Value="newProduct">
                    <ProductForm OnSubmited="SaveNewProduct" />
                </CascadingValue>
                break;
        }
    </div>
</div>