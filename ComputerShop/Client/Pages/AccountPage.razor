@page "/account"
@attribute [Authorize]
@inject IUserService UserService
@inject ILocalStorageService LocalStorageService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider StateProvider

<PageTitle>Konto</PageTitle>

<div class="container" style="max-width: 750px">
    <h2 class="text-center">Zmień hasło</h2>
    <EditForm Model="changePassword" OnValidSubmit="OnPasswordChangeAsync">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <h5 for="currentpassword">Aktualne hasło</h5>
            <InputText id="currentpassword" class="form-control shadow-none" type="password" @bind-Value="changePassword.CurrentPassword" />
            <ValidationMessage For="@(()=>changePassword.CurrentPassword)" />
        </div>
        <div class="mb-3">
            <h5 for="newpassword">Nowe hasło</h5>
            <InputText id="password" class="form-control shadow-none" type="password" @bind-Value="changePassword.Password" />
            <ValidationMessage For="@(()=>changePassword.Password)" />
        </div>
        <div>
            <h5 for="confpassword">Potwierdź nowe hasło</h5>
            <InputText id="confpassword" class="form-control shadow-none" type="password" @bind-Value="changePassword.ConfPassword" />
            <ValidationMessage For="@(()=>changePassword.ConfPassword)" />
        </div>
        <div class="d-flex justify-content-end mt-3">
            <button type="submit" class="btn btn-primary shadow-none">Zapisz</button>
        </div>
    </EditForm>
    <DeliveryDetailsForm DeliveryDetails="delivery" OnValidSubmit="OnValidSubmit"/>
    <div class="d-flex justify-content-end">
        <YesNoRadioInput YesLabelText="Firma" NoLabelText="Osoba prywatna" 
                         OnValueChanged="InvoiceChanged"></YesNoRadioInput>
    </div>    
    @if (isInvoiceForBusiness)
    {
        <InvoiceDetailsForBusinessForm InvoiceDetailsForBusiness="invoiceDetailsForBusiness" OnValidSubmit="OnValidSubmit"/>
    }
    else
    {
        <InvoiceDetailsForm InvoiceDetails="invoiceDetails" OnValidSubmit="OnValidSubmit"/>
    }
</div>

@code {
    ChangePassword changePassword = new();
    IUserHelper? userHelper = null;
    DeliveryDetails delivery = new();
    bool isInvoiceForBusiness = true;
    InvoiceDetailsForBusiness invoiceDetailsForBusiness = new();
    InvoiceDetails invoiceDetails = new();

    protected void InvoiceChanged(bool isForBussiness)
    {
        isInvoiceForBusiness = isForBussiness;
    }
    protected async Task OnPasswordChangeAsync()
    {
        if (userHelper == null)
            userHelper = new UserHelper(StateProvider, UserService, LocalStorageService, NavigationManager, ToastService);
        var response = await UserService.ChangePassword(changePassword);
        if (response.Success)
            ToastService.ShowSuccess("Hasło zostało zmienione", "Udało się!");
        else
        {
            if (response.Data == System.Net.HttpStatusCode.Unauthorized)
                await userHelper.LogoutOnUnauthorizedAsync();
            else
                ToastService.ShowInfo(response?.Message, "Nie udało się ☹");
        }
    }

    protected void OnValidSubmit()
    {
        if (isInvoiceForBusiness)
            return;
        return;
    }
}
