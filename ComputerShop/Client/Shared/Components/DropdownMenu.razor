@typeparam TItem

<style>
    .dropdown button{
        font-size: 1.2rem;
    }

    .dropdown .dropdown-toggle {
        color: #707071;
    }
        .dropdown .dropdown-toggle:hover {
            color: #4a4a4b;
        }
</style>

<div class="dropdown cursorHand" @onfocusout="OnFocusOut" @onmouseover="()=>ChangeIsMenuShown(true)" @onmouseout="()=>ChangeIsMenuShown(false)">
    <div class="d-flex align-items-center">
        @if (!string.IsNullOrWhiteSpace(Icon))
        {
            <span class="@Icon"></span>
        }
        <button class="btn dropdown-toggle shadow-none @ButtonClassCss"
                data-toggle="dropdown"
                type="button" @onmousedown="ChangeIsMenuShown"
                aria-haspopup="true" aria-expanded="false">
            @Title
        </button>
    </div>
    <CascadingValue name="Dropdown" Value="@this">
        <div class="dropdown-menu dropdown-menu-end w-100 @(IsMenuShown? "show shadow":string.Empty)" style="margin-left: @MenuMarginLeft">
            @if (Items != null)
             {
                @foreach (var item in Items)
                {
                    if(item != null)
                    {
                        <DropdownItem TItem="TItem" Item="item">@item</DropdownItem>
                    }                        
                    else
                    {
                        <div class="dropdown-divider"></div>
                    }
                 }
             }
        </div>
    </CascadingValue>
</div>
