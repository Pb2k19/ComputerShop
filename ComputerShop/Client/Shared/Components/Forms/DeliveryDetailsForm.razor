<style>
    option {
        margin: 40px;
        background: rgba(0, 0, 0, 0.3);
        color: #fff;
        text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);
    }
</style>
@if (DeliveryDetails != null && OnValidSubmit != null)
{
    <EditForm Model="DeliveryDetails" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <h5 for="name">Imię i nazwisko / nazwa firmy</h5>
            <InputText id="name" class="form-control shadow-none" @bind-Value="DeliveryDetails.Name" />
            <ValidationMessage For="@(() => DeliveryDetails.Name)" />
        </div>
        <div class="mb-3">
            <h5 for="email">Email</h5>
            <InputText id="email" class="form-control shadow-none" @bind-Value="DeliveryDetails.Email" />
            <ValidationMessage For="@(() => DeliveryDetails.Email)" />
        </div>
        <div class="mb-3">
            <h5 for="phone-number">Numer telefonu</h5>
            <InputText id="phone-number" class="form-control shadow-none" @bind-Value="DeliveryDetails.PhoneNumber" />
            <ValidationMessage For="@(() => DeliveryDetails.PhoneNumber)" />
        </div>
        <div class="mb-3">
            <h5 for="postal-code">Kod pocztowy</h5>
            <InputText id="postal-code" class="form-control shadow-none" @bind-Value="DeliveryDetails.PostCode" />
            <ValidationMessage For="@(() => DeliveryDetails.PostCode)" />
        </div>
        <div class="mb-3">
            <h5 for="city">Miasto</h5>
            <InputText id="city" class="form-control shadow-none" @bind-Value="DeliveryDetails.City" />
            <ValidationMessage For="@(() => DeliveryDetails.City)" />
        </div>
        <div class="mb-3">
            <h5 for="street">Ulica</h5>
            <InputText id="street" class="form-control shadow-none" @bind-Value="DeliveryDetails.Street" />
            <ValidationMessage For="@(() => DeliveryDetails.Street)" />
        </div>
        <div class="mb-3">
            <h5 for="house-number">Numer domu / mieszakania</h5>
            <InputText id="house-number" class="form-control shadow-none" @bind-Value="DeliveryDetails.HouseNumber" />
            <ValidationMessage For="@(() => DeliveryDetails.HouseNumber)" />
        </div>
        <div class="mb-3">
            <h5>Sposób dostawy</h5>
            <DropdownMenu TItem="string"
                          Items="DeliveryMethods"                          
                          ButtonClassCss="form-control shadow-none btn border border-1"
                          @bind-Value="DeliveryDetails.DeliveryMethod"
                          OnMouseOverEnabled="false">
                <InitTitle>@(string.IsNullOrEmpty(DeliveryDetails.DeliveryMethod) ? "Wybierz sposób dostawy" : DeliveryDetails.DeliveryMethod)</InitTitle>
            </DropdownMenu>
            <ValidationMessage For="@(() => DeliveryDetails.DeliveryMethod)" />
        </div>
        <div class="mb-3">
            <h5>Sposób płatności</h5>
            <DropdownMenu TItem="string"
                          Items="PaymentMethods"
                          ButtonClassCss="form-control shadow-none btn border border-1"
                          @bind-Value="DeliveryDetails.PaymentMethod"
                          OnMouseOverEnabled="false">
                <InitTitle>@(string.IsNullOrEmpty(DeliveryDetails.PaymentMethod) ? "Wybierz sposób płatności" : DeliveryDetails.PaymentMethod)</InitTitle>
            </DropdownMenu>
            <ValidationMessage For="@(() => DeliveryDetails.PaymentMethod)" />
        </div>
        <div class="d-flex justify-content-end mt-3">
            <button type="submit" class="btn btn-primary shadow-none">@ButtonText</button>
        </div>
    </EditForm>
}

@code {
    public List<string> DeliveryMethods { get; set; } = new List<string> { "Kurier", "Poczta", "Odbiór osobisty" };
    public List<string> PaymentMethods { get; set; } = new List<string> { "Przy odbiorze" };
    [Parameter] public DeliveryDetails? DeliveryDetails { get; set; }
    [Parameter] public Action? OnValidSubmit { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Zapisz";

    protected override void OnParametersSet()
    {
        if (DeliveryDetails is null)
            DeliveryDetails = new();
        else
        {
            if (!DeliveryMethods.Contains(DeliveryDetails.DeliveryMethod))
                DeliveryDetails.DeliveryMethod = string.Empty;
            if (!PaymentMethods.Contains(DeliveryDetails.PaymentMethod))
                DeliveryDetails.DeliveryMethod = string.Empty;
        }
        base.OnParametersSet();
    }
}
